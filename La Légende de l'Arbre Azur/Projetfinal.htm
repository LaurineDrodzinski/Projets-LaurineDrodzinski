<html>


<!-- EN-TETE ************************************************************************************************************************* -->
<head>

	<!-- Relie un fichier à celui-ci (ici le fichier contenant toutes les fonctions javascript) -->
	<script src="functionfinal.js" language="javascript" type="text/javascript"></script> 

	<!-- Précise au navigateur que les caractères qu'il rencontrera dans la page seront codés selon la norme de codage «ISO-8859-1» -->
	<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"> 
	
	<!-- Titre de la page s'affichant dans l'onglet -->
	<title>MINI-RPG</title> 

	<!-- CSS définissant la police d'écriture qui sera utilisée dans le jeu -->
	<style type="text/css"> 
		@font-face {
			font-family: 'police'; /*Nom donné à la police*/
			src: url('polices/police.ttf'); /*Source de la police*/
		} 
	</style>  

</head>


<!--********************************************************************************************************************************* -->
<body>

	<!-- LEGENDE DES ATTRIBUTS-->
	<!--• src = source de l'élément
		• id = nom donné à l'élément
		• style = endroit où tout ce qui concerne la mise en page sera défini
			- height = hauteur de l'élément
			- width = largeur de l'élément
			- border = bordure
			- position = type de position (ex: absolute -> l'élément en question ne dépend plus des autres éléments)
			- left, right, top, bottom = positionnement de l'élément sur la page (lorsqu'il y a un "margin" devant -> marge entre un élément et un autre)
			- background-... = fond de l'élément (background -> source ; background-size -> taille)
			- box-shadow = ombre présente sur l'élément (à l'intérieur ; à l'extérieur)
			- font-family = choix de la police
			- font-size = taille de la police
			- color = couleur de la police
		• value = texte présent à l'intérieur d'un bouton, d'une zone de saisie...etc
		• type = type de l'élément (ex: bouton ; zone de saisie...etc)
		• align = type d'alignement de l'élément
	-->

	<!-- Zone de dessin où s'affichera le jeu (on appelle cela un "canvas") -->
	<canvas id="canvas" height="640px" width="960px" style="border:black solid 1px;"></canvas>

	<!-- Zone d'image de la taille du canvas où s'affichera l'image de fin -->
	<img src="imgDecors/end.png" id="imgfin" style="height:640px; width:960px; border:black solid 1px;"></img>

	<!-- Zone d'image où s'affichera le portrait des personnages et d'autres photos -->
	<img src="" id="photoPortrait" style="position:absolute; height:294px; width:300px; left:990px;"></img>

	<!-- Paragraphe où s'affichera la touche "Entrée" lorsque le héros aura la possibilité d'interagir avec quelque chose, ainsi que le bouton "Rejouer" apparaissant à la fin du jeu-->
	<p id="p1" style="position:absolute; border:4px black solid; height:55px; width:217px; background:url('imgDecors/fondindication.png'); background-size:217px 55px; box-shadow:0px 2px 13px 2px rgba(0,0,0,2) inset;" align="center">
		<img id="PhotoEntree" src="imgDecors/void.png" style="height:60px; width:62px; margin-top:-2px;"><!-- Image "Entrée" -->
		<input type="button" value="Rejouer" id="btnRejouer" style="margin-top:17px;"><!-- Bouton "Rejouer" -->
	</p>

	<!-- Paragraphe où s'affichera les dialogues -->
	<p id="p2" style="position:absolute; border:4px black double; height:400px; width:300px; background:url('imgDecors/fondDialogue.png'); background-size:300px 400px; color:white; left:990px; top:300px; font-family:'police'; font-size: 22px;" align="center">
		<!-- Paragraphe où les zones de saisie concernant la quête <mon nom> s'afficheront -->
		<p id="saisieReponse" style="position:absolute; left:1030px; top:450px;">
			<input type="text" value="" id="entrerNom" style="width:135px;"><!-- Zone de saisie -->
			<input type="button" value="Est-ce cela?" id="parlerNom"><!-- Bouton "Parler" -->
		</p>
	</p>

	<!-- Paragraphe où se situe l'inventaire du personnage -->
	<p id="p3" style="position:absolute; border:4px black solid; height:55px; width:722px; color:white; left:240px; top:650px; background:url('imgDecors/fondinventaire.png'); background-size:722px 55px">
 		<img src="imgDecors/void.png"  id="photoBocal" style="height:55px; width:55px; margin-left:5px; "></img> <!-- Emplacement de l'objet "bocal" (objet ramassé durant la quête <mon objet>) -->
 		<img src="imgDecors/void.png"  id="photoAmbre" style="height:55px; width:55px; margin-left:15px; "></img> <!-- Emplacement de l'objet "ambre" (objet obtenu une fois les deux quêtes terminées) -->
	</p>



<!-- SCRIPT ************************************************************************************************************************* -->
<script language="javascript">

/* Ne pas oublier d'appeler le canvas et son contexte */
var canvas = document.getElementById('canvas');
var ctx = canvas.getContext('2d');

/* Variables concernant la position du héros... */
var x = 96; //... dans le repère de la carte (à chaque mouvement l'image du héros se déplace de 32px)
var y = 96;
var l = 3; //... dans le tableau de la carte (à chaque mouvement le personnage se déplace d'une case)
var c = 3;

/* Elements cachés au début du jeu */
imgfin.style.display="none";//Image de fin
btnRejouer.style.display="none";//Bouton "Rejouer"
p2.style.display="none";

/* Variables concernant l'affichage de la carte, du décor, des personnages */
var affichageL;//Lignes
var affichageC;//Colonnes

/* Images concernant le décor de la carte et les divers objets*/
var carte = new Image();//Image du fond de la carte
carte.src = "imgDecors/carte.png";

var maison = new Image();//Image des maisons
maison.src = "imgDecors/maison.png";

var arbre1 = new Image();//Image d'un arbre mort
arbre1.src = "imgDecors/arbre1.png";

var arbre2 = new Image();//Image d'un arbre avec feuilles
arbre2.src = "imgDecors/arbre2.png";

var arbre3 = new Image();//Image d'un arbre avec feuilles
arbre3.src = "imgDecors/arbre3.png";

var arbre4 = new Image();//Image d'un arbre avec feuilles
arbre4.src = "imgDecors/arbre4.png";

var arbre5 = new Image();//Image d'un arbre mort avec une lanterne
arbre5.src = "imgDecors/arbre5.png";

var portailCim = new Image();//Image du portail du cimetière
portailCim.src = "imgDecors/portailcimetiere.png";

var puit = new Image();//Image du puit
puit.src = "imgDecors/puit.png";

var statue1 = new Image();//Image des statues des coins en haut à gauche et en bas à droite
statue1.src = "imgDecors/statue1.png";

var statue2 = new Image();//Image de la statue du coin en haut à droite (même que statue1 mais légèrement modifiée pour que la statue puisse apparaitre derrière la barrière)
statue2.src = "imgDecors/statue2.png";

var champble = new Image();//Image du champ
champble.src = "imgDecors/champble.png";

var paille = new Image();//Image du tas de foin
paille.src = "imgDecors/bottedepaille.png";

var linge = new Image();//Image de l'étendoir à linge
linge.src = "imgDecors/linge.png";

var bocal = new Image();//Image du bocal servant à la quête <mon objet>
bocal.src = "imgItems/bocal.png";

var arbreSansAmbre = new Image();//Image du grand arbre sans la pierre au centre
arbreSansAmbre.src = "imgDecors/arbresansambre.png";

var arbreAvecAmbre = new Image();//Image du grand arbre avec la pierre au centre
arbreAvecAmbre.src = "imgDecors/arbreavecambre.png";

var portailFin = new Image();//Image du portail de fin
portailFin.src = "imgDecors/portailfin.png";

var herbe = new Image();//Image d'un carré d'herbe utilisé dans l'affichage de l'ennemi
herbe.src= "imgDecors/herbe.png";


/*Images et variables concernant l'affichage du héros*/
var herosface = new Image();
herosface.src = "imgPersos/herosface.png";

var herosdos = new Image();
herosdos.src = "imgPersos/herosdos.png";

var herosdroit = new Image();
herosdroit.src = "imgPersos/herosdroit.png";

var herosgauche = new Image();
herosgauche.src = "imgPersos/herosgauche.png";

var herosfaceepee = new Image();
herosfaceepee.src = "imgPersos/herosfaceepee.png";

var herosdosepee = new Image();
herosdosepee.src = "imgPersos/herosdosepee.png";

var herosdroitepee = new Image();
herosdroitepee.src = "imgPersos/herosdroitepee.png";

var herosgaucheepee = new Image();
herosgaucheepee.src = "imgPersos/herosgaucheepee.png";

var deplacement=0;//Variable changeant en fonction du mouvement effectué (0=bas 1=haut 2=droite 3=gauche)


/*Images et variables concernant l'affichage de la Mort */
var pnjmortface = new Image();
pnjmortface.src = "imgPersos/mortface.png";

var pnjmortdos = new Image();
pnjmortdos.src = "imgPersos/mortdos.png";

var pnjmortdroit = new Image();
pnjmortdroit.src = "imgPersos/mortdroit.png";


/*Images et variables concernant l'affichage du fantôme donnant la quête <mon objet> */
var pnjfantomeobjetface = new Image();
pnjfantomeobjetface.src = "imgPersos/fantomequeteobjetface.png";

var pnjfantomeobjetdos = new Image();
pnjfantomeobjetdos.src = "imgPersos/fantomequeteobjetdos.png";

var pnjfantomeobjetdroit = new Image();
pnjfantomeobjetdroit.src = "imgPersos/fantomequeteobjetdroit.png";

var pnjfantomeobjetgauche = new Image();
pnjfantomeobjetgauche.src = "imgPersos/fantomequeteobjetgauche.png";


/*Images et variables concernant l'affichage du fantôme donnant la quête <mon nom> */
var pnjfantomenomface = new Image();
pnjfantomenomface.src = "imgPersos/mortefeuface.png";

var pnjfantomenomdos = new Image();
pnjfantomenomdos.src = "imgPersos/mortefeudos.png";

var pnjfantomenomdroit = new Image();
pnjfantomenomdroit.src = "imgPersos/mortefeudroit.png";

var pnjfantomenomgauche = new Image();
pnjfantomenomgauche.src = "imgPersos/mortefeugauche.png";


/*Images et variables concernant l'affichage du personnage en tenue bleu */
var pnjBleuFace=new Image();
pnjBleuFace.src="imgPersos/pnjBleuFace.png";

var pnjBleuDos=new Image();
pnjBleuDos.src="imgPersos/pnjBleuDos.png";

var pnjBleuDroite=new Image();
pnjBleuDroite.src="imgPersos/pnjBleuDroite.png";

var pnjBleuGauche=new Image();
pnjBleuGauche.src="imgPersos/pnjBleuGauche.png";


/* Images et variables concernant l'affichage de l'ennemi */
var ennemiFace = new Image();
ennemiFace.src= "imgPersos/ennemiface.png";

var ennemiDos = new Image();
ennemiDos.src= "imgPersos/ennemidos.png";

var ennemiL = 6;//Position de l'ennemi (ligne)

var ennemiC = 12;//Position de l'ennemi (colonne)

var direction = 1;//Sens du déplacement : //si =1 : l'ennemi descend 
										  //si =0 : l'ennemi monte

var ennemi = 1; //Vie de l'ennemi : //si =1 : l'ennemi est en vie
                 				    //si =0 : l'ennemi est mort

var disparitionEnnemiFace = new Image();//Ensemble des images utilisées dans la disparition de l'ennemi lorsqu'il est de face
disparitionEnnemiFace.src= "imgPersos/spritedisparitionennemiface.png";

var disparitionEnnemiDos = new Image();//Ensemble des images utilisées dans la disparition de l'ennemi lorsqu'il est de dos
disparitionEnnemiDos.src= "imgPersos/spritedisparitionennemidos.png";


/*Variable concernant l'inventaire*/
var ambre=0;


/*Variable pour l'affichage du portrait (s'affiche lorsque l'on interagit avec un personnage)*/
var varPhoto=0;


/*Variable pour l'affichage de la touche "Entrée" (s'affiche lorsque le héros se situe sur une zone dans laquelle on peut interagir) */
var varEntree=0;//Quand on appuie sur "Entrée" la variable prend la valeur 1, ce qui permet par la suite d'activer certaines fonctions


/* Variables concernant la quête <mon objet> */
var varAvancementQueteObjet=0;//si =0: le héros n'a pas encore été voir personnage concerné, il ne peut pas ramasser le bocal tant que la quête <mon objet> n'est pas lancée
				//si =1: le héros a parlé au personnage concerné, il peut donc ramasser le bocal
				//si =2: le bocal a été ramassé, le héros peut parler au personnage pour terminer la quête <mon objet>


/* Variables concernant la quête <mon nom> */
var varAvancementQueteNom=0; //si =0: le héros n'a pas encore été voir personnage concerné, il ne peut pas lire ce qu'il y a sur les tombes tant que la quête <mon nom> n'est pas lancée
							 //si =1: le héros a parlé au personnage concerné, il peut donc lire les tombes
							 //si =2: une des tombes a été lue, le héros peut parler au personnage pour terminer la quête <mon nom> en lui donnant la bonne réponse
saisieReponse.style.display='none';//cache la zone de saisie et le bouton de la quête <mon nom>


/* Quête <la Mort> */
var varAvancementQueteMort=0;//si =0: aucune quête n'est terminée
				//si =1: 1 quête terminée
				//si =2: toutes les quêtes sont terminées


/*TABLEAU DE LA CARTE (découpage du canvas en cases de 32x32 px) */

	/*LEGENDE*/
	// 0 = herbe
	// 20 , 21 , 22 , 23 , 24 , 25 = arbres
	// 555 = bocal
	// 3 = obstacles divers
	// 30 = puit
	// 31 = champ de blé
	// 32 = botte de paille
	// 33 = étendoir à linge
	// 44 = maisons
	// 11 = portail du cimetière
	// 111 , 112 = statues
	// 55 , 66 , 77 , 88 = personnages non joueur
	// 5 , 6 , 7 , 8 , 9 , 666 = zones d'interaction
	// 55 / 5 / 555 -> quête <mon objet>
	// 66 / 6 -> quête <mon nom>
	// 77 / 7 -> quête <la Mort>

tab=[
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],				//0
		[3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 555, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3],			//1
		[3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3],				//2
		[3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3],				//3
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 3, 44, 3, 0, 31, 3, 3, 3, 0, 0, 0, 3],			//4
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0],			//5
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],				//6
		[111, 3, 3, 3, 3, 3, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0],		//7
		[0, 5, 0, 20, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],			//8
		[5, 55, 5, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],			//9
		[0, 5, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0],				//10
		[0, 0, 0, 0, 666, 0, 3, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 44, 3, 21, 0, 0, 0, 3],			//11
		[0, 3, 0, 0, 0, 0, 3, 77, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3],			//12
		[0, 666, 0, 0, 0, 0, 11, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3],			//13
		[0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 3, 3, 3, 3, 3],			//14
		[0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 88, 8, 3, 3, 3, 3, 3],			//15
		[0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 3],				//16
		[0, 20, 0, 666, 6, 0, 3, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 25, 0, 3],		//17
		[0, 0, 3, 6, 66, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 113, 113, 113, 113, 0, 0, 9, 0, 3],	//18
		[0, 0, 666, 0, 6, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3]			//19
	]


/* Au chargement de la page appeler les fonctions ci-dessous */
window.onload = function(){
	dessinerCarte();//Dessine la carte
	dessinerPnjObjets();//Dessine les personnages et les objets
	dessinerherosface();//Dessine le héros
	dessinerdecors();//Dessine le décor
	dessinerEnnemi();//Dessine l'ennemi
	portrait();//Dessine la zone où s'afficheront les portraits
}


/*Les fonctions ci-dessous s'activent toutes les X secondes (1000 = 1 seconde)*/
setInterval("dessinerEnnemi()",320);//Dessine l'ennemi de face
setInterval("collisionEnnemi()",80);//Teste si le héros se trouve sur l'ennemi
setInterval("attaquer()",80);//Dessine le héros tenant une épée lorsque l'ennemi passe à côté de lui


/* Quand on appuie sur la touche... */
document.onkeydown = function(evt) {

	varEntree=0;//Rénitialise la variable varEntree à chaque fois que l'on appuie sur une touche

	switch(evt.keyCode) {

	/* Pour les flèches: haut(y:-32px/l:-1case), bas(y:+32px/l:+1case), gauche(x:-32px/c:-1case), droite(x:+32px/c:+1case) */

		case 38: //Flèche du haut: déplacement vers le haut, le héros se déplace donc sur l'axe des ordonnées y (repère carte) et l (tableau  carte)
		
			y=Math.max(0,y-32);//déplacement dans le repère: on enlève 32px à l'emplacement du perso ("y" a pour minimum 0)
			l=Math.max(0,l-1);//déplacement dans le tableau: on enlève 1 à l (on monte d'une case donc on remonte d'une ligne) ("l" a pour minimum 0)

			//Indique au héros qu'il ne peut pas se déplacer sur les cases indiquées ci-dessous
			if(	tab[l][c]==2  || tab[l][c]==3  || 
				tab[l][c]==11 || tab[l][c]==20 || 
				tab[l][c]==21 || tab[l][c]==22 || 
				tab[l][c]==23 || tab[l][c]==24 || 
				tab[l][c]==25 || tab[l][c]==30 || 
				tab[l][c]==31 || tab[l][c]==32 || 
				tab[l][c]==44 || tab[l][c]==50 ||
				tab[l][c]==55 || tab[l][c]==66 ||  
				tab[l][c]==77 || tab[l][c]==88 ||
				tab[l][c]==111||  tab[l][c]==112 ){

				y=Math.min(canvas.height-32,y+32);//annule le déplacement: on ajoute +32px au -32px fait précédement, on obtient donc un déplacement nul
				l=l+1;//annule le déplacement: on ajoute 1 (case) au -1 fait précédement, on obtient donc un déplacement nul
			}

			ctx.clearRect(0,0,canvas.width,canvas.height);//Efface le contenu du canvas
			dessinerCarte();//Dessine la carte
			dessinerPnjObjets();//Affiche les personnages et les objets
			dessinerherosdos();//Dessine le héros de dos
			dessinerdecors();//Dessine le décor
			varPhoto=0;//Dés que le héros se déplace le portrait s'efface
			p2.style.display="none";//Dés que le héros se déplace la boîte de dialogue s'efface
			saisieReponse.style.display="none";//Dés que le héros se déplace la zone de saisie s'efface

		break;


		case 40: //Flèche du bas: déplacement vers le bas, le héros se déplace donc sur l'axe des ordonnées y (repère carte) et l (tableau  carte)

			y=Math.min(canvas.height-32,y+32);//déplacement dans le repère: on ajoute 32px à l'emplacement du perso ("y" a pour maximum la hauteur du canvas moins une case(32)-> pour que le héros n'en sorte pas)
			l=Math.min(19,l+1);//déplacement dans le tableau: on ajoute 1 à l (on descend d'une case donc on descend d'une ligne) ("l" a pour maximum 19 -> nombre de lignes du tableau)

			
			//Indique au héros qu'il ne peut pas se déplacer sur les cases indiquées ci-dessous
			if(	tab[l][c]==2  || tab[l][c]==3  || 
				tab[l][c]==11 || tab[l][c]==20 || 
				tab[l][c]==21 || tab[l][c]==22 || 
				tab[l][c]==23 || tab[l][c]==24 || 
				tab[l][c]==25 || tab[l][c]==30 || 
				tab[l][c]==31 || tab[l][c]==32 || 
				tab[l][c]==44 || tab[l][c]==50 ||
				tab[l][c]==55 || tab[l][c]==66 ||  
				tab[l][c]==77 || tab[l][c]==88 ||
				tab[l][c]==111||  tab[l][c]==112 ){
				
				y=Math.max(0,y-32);//annule le déplacement: on soustrait 32px au +32px fait précédement, on obtient donc un déplacement nul
				l=l-1;//annule le déplacement: on soustrait 1 (case) au +1 fait précédement, on obtient donc un déplacement nul
			}

			ctx.clearRect(0,0,canvas.width,canvas.height);//Efface le contenu du canvas
			dessinerCarte();//Dessine la carte
			dessinerPnjObjets();//Affiche les personnages et les objets
			dessinerherosface();//Dessine le héros de face
			dessinerdecors();//Dessine le décor
			varPhoto=0;//Dés que le héros se déplace le portrait s'efface
			p2.style.display="none";//Dés que le héros se déplace la boîte de dialogue s'efface
			saisieReponse.style.display="none";//Dés que le héros se déplace la zone de saisie s'efface

		break;


		case 37: //Flèche gauche: déplacement vers la gauche, le héros se déplace donc sur l'axe des abscisses x (repère carte) et c (tableau  carte)

			x=Math.max(0,x-32);//déplacement dans le repère: on enlève 32px à l'emplacement du perso ("x" a pour minimum 0)
			c=Math.max(0,c-1);//déplacement dans le tableau: on enlève 1 à c (on se déplace d'une case vers la gauche donc on avance d'une colonne) ("c" a pour minimum 0)

			
			//Indique au héros qu'il ne peut pas se déplacer sur les cases indiquées ci-dessous
			if(	tab[l][c]==2  || tab[l][c]==3  || 
				tab[l][c]==11 || tab[l][c]==20 || 
				tab[l][c]==21 || tab[l][c]==22 || 
				tab[l][c]==23 || tab[l][c]==24 || 
				tab[l][c]==25 || tab[l][c]==30 || 
				tab[l][c]==31 || tab[l][c]==32 || 
				tab[l][c]==44 || tab[l][c]==50 ||
				tab[l][c]==55 || tab[l][c]==66 ||  
				tab[l][c]==77 || tab[l][c]==88 ||
				tab[l][c]==111||  tab[l][c]==112 ){

				x=Math.min(canvas.width-32,x+32);//annule le déplacement: on ajoute +32px au -32px fait précédement, on obtient donc un déplacement nul
				c=c+1;//annule le déplacement: on ajoute 1 (case) au -1 fait précédement, on obtient donc un déplacement nul
			}

			ctx.clearRect(0,0,canvas.width,canvas.height);//Efface le contenu du canvas
			dessinerCarte();//Dessine la carte
			dessinerPnjObjets();//Affiche les personnages et les objets
			dessinerherosgauche();//Dessine le héros de profil gauche
			dessinerdecors();//Dessine le décor
			varPhoto=0;//Dés que le héros se déplace le portrait s'efface
			p2.style.display="none";//Dés que le héros se déplace la boîte de dialogue s'efface
			saisieReponse.style.display="none";//Dés que le héros se déplace la zone de saisie s'efface

		break;


		case 39: //Flèche droite: déplacement vers la droite, le héros se déplace donc sur l'axe des abscisses x (repère carte) et c (tableau  carte)

			x=Math.min(canvas.width-32,x+32);//déplacement dans le repère: on ajoute 32px à l'emplacement du perso ("x" a pour maximum la largeur du canvas moins une case(32) -> pour que le héros n'en sorte pas)
			c=Math.min(29,c+1);//déplacement dans le tableau: on ajoute 1 à c (on se déplace d'une case vers la droite donc on recule d'une colonne) ("c" a pour maximum 29 -> nombre de colonnes du tableau)

			//Indique au héros qu'il ne peut pas se déplacer sur les cases indiquées ci-dessous
			if(	tab[l][c]==2  || tab[l][c]==3  || 
				tab[l][c]==11 || tab[l][c]==20 || 
				tab[l][c]==21 || tab[l][c]==22 || 
				tab[l][c]==23 || tab[l][c]==24 || 
				tab[l][c]==25 || tab[l][c]==30 || 
				tab[l][c]==31 || tab[l][c]==32 || 
				tab[l][c]==44 || tab[l][c]==50 ||
				tab[l][c]==55 || tab[l][c]==66 ||  
				tab[l][c]==77 || tab[l][c]==88 ||
				tab[l][c]==111||  tab[l][c]==112 ){

				x=Math.max(0,x-32);//annule le déplacement: on soustrait 32px au +32px fait précédement, on obtient donc un déplacement nul
				c=c-1;//annule le déplacement: on soustrait 1 (case) au +1 fait précédement, on obtient donc un déplacement nul
			}

			ctx.clearRect(0,0,canvas.width,canvas.height);//Efface le contenu du canvas
			dessinerCarte();//Dessine la carte
			dessinerPnjObjets();//Affiche les personnages et les objets
			dessinerherosdroit();//Dessine le héros de profil droit
			dessinerdecors();//Dessine le décor
			varPhoto=0;//Dés que le héros se déplace le portrait s'efface
			p2.style.display="none";//Dés que le héros se déplace la boîte de dialogue s'efface
			saisieReponse.style.display="none";//Dés que le héros se déplace la zone de saisie s'efface

		break;

		case 13://Quand on appuie sur la touche Entrée

    	    ctx.clearRect(0,0,canvas.width,canvas.height);//Efface le contenu du canvas
    		dessinerCarte();//Dessine la carte
			dessinerPnjObjets();//Dessine les personnages et les objets
			
			varEntree=1;//La variable varEntree s'active -> permet l'activation d'autres fonctions

			if(tab[l][c]==5 || tab[l][c]==6 || tab[l][c]==7 || tab[l][c]==8 || tab[l][c]==9 || tab[l][c]==999 || (tab[l][c]==666 && varAvancementQueteNom!=0)){//Si le héros se situe sur une zone d'interaction
    			p2.style.display='block';//La boîte de dialogue s'affiche
    		}
    		
    		/*Dessine le héros tenant une épée dès que le joueur appuie sur "Entrée" (si il ne se trouve pas sur une zone incompatible -> autour d'un personnage)*/
    		if(tab[l][c]!=5 && tab[l][c]!=6 && tab[l][c]!=7 && tab[l][c]!=8 && tab[l][c]!=9 && tab[l][c]!=666){//S'il n'est pas sur une zone incompatible
				if(deplacement==0){//Vers la bas
    				ctx.drawImage(herosfaceepee, x+2.5, y+2, 27, 30);
    			}
   	 			if(deplacement==1){//Vers le haut
    				ctx.drawImage(herosdosepee, x+2.5, y+1, 28, 30);
    			}	
    			if(deplacement==2){//Vers la droite
    				ctx.drawImage(herosdroitepee, x+5, y+2, 32, 29);
   	 			}
    			if(deplacement==3){//Vers la gauche
					ctx.drawImage(herosgaucheepee, x-3, y+2, 31, 29);
    			}
    		}else{//S'il est sur une zone incompatible
    			if(deplacement==0){//Vers la bas
    				ctx.drawImage(herosface, x+5, y+2, 23, 29);
    			}
   	 			if(deplacement==1){//Vers la droite
    				ctx.drawImage(herosdos, x+5, y+2, 23, 29);
    			}
    			if(deplacement==2){//Vers la droite
    				ctx.drawImage(herosdroit, x+5, y+2, 23, 29);
   	 			}
    			if(deplacement==3){//Vers la gauche
					ctx.drawImage(herosgauche, x+5, y+2, 23, 29);
    			}
    		}

    		dessinerdecors();//Dessine le décor

    	break;
		
	}

	//Quête <mon objet> ----------------------------------------------------------------------------------
	queteObjet();

	//Quête <mon nom> ------------------------------------------------------------------------------------
	queteNom();	
	
	//Quête <la Mort> ------------------------------------------------------------------------------------
	queteMort();		  		
		  	
	//Interaction avec le personnage habillé en bleu -----------------------------------------------------	
	personnageBleu();

	//Quête <grand arbre> --------------------------------------------------------------------------------	
	queteGrandArbre();

	//Fin du jeu -----------------------------------------------------------------------------------------
	finJeu();

	//Inventaire -----------------------------------------------------------------------------------------
	inventaire();
	
	//Fonction permettant d'attaquer
	attaquer();

	//Ennemi -> évite les clignotements (disparition et réaparition de l'ennemi) -------------------------
	if(ennemi==1){//Si l'ennemi est en vie
		if(direction==1){//Si l'ennemi se déplace vers le bas, le dessiner de face aux bonnes coordonnées
			ctx.drawImage(ennemiFace, (ennemiC*32)+2, (ennemiL*32), 29, 29);
		}
		if(direction==0){//Si l'ennemi se déplace vers le haut, le dessiner de dos aux bonnes coordonnées
			ctx.drawImage(ennemiDos, (ennemiC*32)+2, (ennemiL*32), 29, 29);
		}
	}

	if(tab[l][c]==5 || tab[l][c]==6 || tab[l][c]==7 || tab[l][c]==8 || (tab[l][c]==666 && varAvancementQueteNom!=0) || tab[l][c]==9 || tab[l][c]==999){//Dés que le héros se situe sur une zone d'interaction la touche "Entrée" apparait
		document.getElementById('PhotoEntree').src="imgDecors/entree.png";
	}else{//Le héros n'est pas sur une zone où il peut interagir
		document.getElementById('PhotoEntree').src="imgDecors/void.png";	
	}

	if(varAvancementQueteObjet==3){//Fin de la quête <mon objet>
		/*La case où se situe le fantôme ainsi que les cases autour de celui-ci prennent comme valeur 0, ce qui fait disparaître le fantôme et les zones d'interaction le concernant */
   		tab[8][1]=0;//-> fantôme
		tab[9][0]=0;//-> zone d'interaction
		tab[9][1]=0;//-> zone d'interaction
		tab[10][1]=0;//-> zone d'interaction
		tab[9][2]=0;//-> zone d'interaction
   	}

   	if(varAvancementQueteMort==3){//Fin de la quête <la Mort>
   		/*La case où se situe le fantôme ainsi que les cases autour de celui-ci prennent comme valeur 0, ce qui fait disparaître le fantôme et les zones d'interaction le concernant */
   		tab[11][7]=0;//-> la Mort
    	tab[12][8]=0;//-> zone d'interaction
    	tab[13][7]=0;//-> zone d'interaction
    	tab[12][7]=0;//-> zone d'interaction
  	}
 	
	portrait();//Affiche ou non un portrait au dessus de la boîte de dialogue

}

</script>

</body>



</html>